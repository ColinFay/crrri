% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Debugger_commands.R
\name{Debugger.evaluateOnCallFrame}
\alias{Debugger.evaluateOnCallFrame}
\title{Send the command Debugger.evaluateOnCallFrame

Evaluates expression on a given call frame.}
\usage{
Debugger.evaluateOnCallFrame(promise, callFrameId, expression,
  objectGroup = NULL, includeCommandLineAPI = NULL, silent = NULL,
  returnByValue = NULL, generatePreview = NULL,
  throwOnSideEffect = NULL, timeout = NULL)
}
\arguments{
\item{promise}{An aynchronous result object.}

\item{callFrameId}{A CallFrameId.
Call frame identifier to evaluate on.}

\item{expression}{A character string.
Expression to evaluate.}

\item{objectGroup}{Optional. A character string.
String object group name to put result into (allows rapid releasing resulting object handles
using \code{releaseObjectGroup}).}

\item{includeCommandLineAPI}{Optional. A logical.
Specifies whether command line API should be available to the evaluated expression, defaults
to false.}

\item{silent}{Optional. A logical.
In silent mode exceptions thrown during evaluation are not reported and do not pause
execution. Overrides \code{setPauseOnException} state.}

\item{returnByValue}{Optional. A logical.
Whether the result is expected to be a JSON object that should be sent by value.}

\item{generatePreview}{Experimental. Optional. A logical.
Whether preview should be generated for the result.}

\item{throwOnSideEffect}{Optional. A logical.
Whether to throw an exception if side effect cannot be ruled out during evaluation.}

\item{timeout}{Experimental. Optional. A Runtime.TimeDelta.
Terminate execution after timing out (number of milliseconds).}
}
\value{
A promise (following the definition of the promises package).
The value of the fulfilled promise is a named list of length 2.
}
\description{
Send the command Debugger.evaluateOnCallFrame

Evaluates expression on a given call frame.
}
